# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
{{- if .Values.os2mo.init.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: mo-init-job
  labels:
    app: os2mo-init
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: os2mo-init
    spec:
      containers:
        - name: os2mo-init
          image: "{{ .Values.os2mo.init.image.repository }}:{{ .Values.os2mo.init.image.tag }}"
          imagePullPolicy: {{ .Values.os2mo.init.image.pullPolicy }}
          env:
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: MO_URL
              value: "http://mo-service:5000"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            - name: LORA_URL
              value: "http://mox-service:8080"
            - name: LORA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-lora-dipex-secret
                  key: client_secret
            - name: LORA_AUTH_REALM
              value: "lora"
          resources:
            requests:
              memory: "64Mi"
              cpu: "200m"
            limits:
              memory: "128Mi"
              cpu: "400m"
          volumeMounts:
           - name: os2mo-init-config-volume
             mountPath: /config
             readOnly: true
      initContainers:
        - name: wait-for-mox
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for MOX to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://mox-service:8080/site-map" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            requests:
              memory: "64Mi"
              cpu: "5m"
            limits:
              memory: "128Mi"
              cpu: "10m"
        - name: wait-for-mo
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for MO to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://mo-service:5000/" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            requests:
              memory: "64Mi"
              cpu: "5m"
            limits:
              memory: "128Mi"
              cpu: "10m"
        - name: wait-for-keycloak
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for Keycloak to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://keycloak-service:8080/auth/realms/master" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            requests:
              memory: "64Mi"
              cpu: "5m"
            limits:
              memory: "128Mi"
              cpu: "10m"
      restartPolicy: Never
      volumes:
        - name: os2mo-init-config-volume
          configMap:
            name: os2mo-init-config
            items:
              - key: config
                path: config.yml
{{- end }}