# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
{{- if .Values.omada.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omada-deployment
  labels:
    app: omada
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: omada
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: omada
    spec:
      containers:
        - name: omada
          image: "{{ .Values.omada.image.repository }}:{{ .Values.omada.image.tag }}"
          imagePullPolicy: {{ .Values.omada.image.pullPolicy }}
          env:
            - name: MO_URL
              value: "http://mo-service:5000"
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: AUTH_REALM
              value: "mo"
            - name: CLIENT_ID
              value: "dipex"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            - name: IT_SYSTEM_USER_KEY
              value: "{{ .Values.omada.it_system_user_key }}"
            - name: ODATA_URL
              value: "{{ .Values.omada.odata_url }}"
            - name: MAX_WORKERS
              value: "1"
          ports:
            - containerPort: 80
          resources:
            {{- toYaml .Values.omada.resources | nindent 12 }}
      initContainers:
        - name: wait-for-mo
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for MO to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://mo-service:5000/" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            requests:
              memory: "64Mi"
              cpu: "5m"
            limits:
              memory: "128Mi"
              cpu: "10m"
        - name: wait-for-keycloak
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for Keycloak to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://keycloak-service:8080/auth/" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            requests:
              memory: "64Mi"
              cpu: "5m"
            limits:
              memory: "128Mi"
              cpu: "10m"
{{- end }}