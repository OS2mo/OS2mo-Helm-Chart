# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
{{- if .Values.sd_changed_at.enabled }}
{{- $keycloak_client_id := "integration_sd_changed_at" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sd-changed-at
  labels:
    app: sd-changed-at
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: sd-changed-at
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sd-changed-at
    spec:
      containers:
        - name: sd-changed-at
          image: "{{ .Values.sd_changed_at.image.repository }}:{{ .Values.sd_changed_at.image.tag }}"
          imagePullPolicy: {{ .Values.sd_changed_at.image.pullPolicy }}
          env:
            {{- if not .Values.sd_changed_at.sd_global_from_date }}
              {{- fail "SD_GLOBAL_FROM_DATE must be set" }}
            {{- end }}
            {{- if not .Values.sd_changed_at.sd_job_function }}
              {{- fail "SD_JOB_FUNCTION must be set" }}
            {{- end }}
            {{- if not .Values.sd_changed_at.sd_monthly_hourly_divide }}
              {{- fail "SD_MONTHLY_HOURLY_DIVIDE must be set" }}
            {{- end }}
            {{- if not .Values.sd_changed_at.sd_import_run_db }}
              {{- fail "SD_IMPORT_RUN_DB must be set" }}
            {{- end }}
            - name: SD_GLOBAL_FROM_DATE
              value: "{{ .Values.sd_changed_at.sd_global_from_date }}"
            - name: SD_JOB_FUNCTION
              value: "{{ .Values.sd_changed_at.sd_job_function }}"
            - name: SD_MONTHLY_HOURLY_DIVIDE
              value: "{{ .Values.sd_changed_at.sd_monthly_hourly_divide }}"
            - name: SD_IMPORT_RUN_DB
              value: "{{ .Values.sd_changed_at.sd_import_run_db }}"

            - name: MO_URL
              value: "http://mo-service:5000"
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: AUTH_REALM
              value: "mo"
            - name: CLIENT_ID
              value: $keycloak_client_id
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: sd-changed-at-client-secret
                  key: client_secret

            # The three ENVs below require an sd-secret created in Flux

            - name: SD_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sd_changed_at.sd_secret_name }}
                  key: sd_username
            - name: SD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sd_changed_at.sd_secret_name }}
                  key: sd_password
            - name: SD_INSTITUTION_IDENTIFIER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sd_changed_at.sd_secret_name }}
                  key: sd_institution
          envFrom:
            - configMapRef:
                name: sd-changed-at
          ports:
            - containerPort: 5000
          resources:
            {{- toYaml .Values.sd_changed_at.resources | nindent 12 }}
          volumeMounts:
            - name: sd-pv
              mountPath: "/mnt/dipex"
      initContainers:
        {{ include "wait-for-keycloak" . | nindent 8 }}
        {{ include "wait-for-mox" . | nindent 8 }}
        {{ include "wait-for-mo" . | nindent 8 }}
        - name: create-client-secret
          image: "{{ .Values.keycloak.integrationbuilder.image.repository }}:{{ .Values.keycloak.integrationbuilder.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.integrationbuilder.image.pullPolicy }}
          env:
            # Postgres state connection
            {{- $use_ssl := (ne .Values.database.sslmode "") }}
            {{- $sslmode := ternary "require" "disable" $use_ssl }}
            - name: POSTGRES_CONNECTION_STRING
              value: "postgres://keycloak:$(KEYCLOAK_DB_PASSWORD)@{{ .Values.database.host }}/keycloak?sslmode={{ $sslmode }}"
            - name: POSTGRES_SCHEMA_NAME
              value: terraform_remote_state_sd_changed_at

            # Keycloak REST connection
            - name: TF_VAR_admin_password
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: admin_password

            # Configuration of the client
            - name: TF_VAR_client_name
              value: $keycloak_client_id
            - name: TF_VAR_client_roles
              value: '["admin"]'
            - name: TF_VAR_client_secret
              valueFrom:
                secretKeyRef:
                  name: sd-changed-at-client-secret
                  key: client_secret
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
        - name: prepare-run-db
          image: "{{ .Values.sd_changed_at.init.image.repository }}:{{ .Values.sd_changed_at.init.image.tag }}"
          imagePullPolicy: {{ .Values.sd_changed_at.init.image.pullPolicy }}
          env:
            - name: SD_GLOBAL_FROM_DATE
              value: "{{ .Values.sd_changed_at.sd_global_from_date }}"
            - name: SD_IMPORT_RUN_DB
              value: "{{ .Values.sd_changed_at.sd_import_run_db }}"
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
          volumeMounts:
            - name: sd-pv
              mountPath: "/mnt/dipex"
      volumes:
        - name: sd-pv
          persistentVolumeClaim:
            claimName: sd-pvc
{{- end }}
