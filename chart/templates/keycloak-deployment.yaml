# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "keycloak.labels" . | nindent 8 }}
    spec:
      volumes:
        - name: keycloak-realm-json
          emptyDir: {}
      containers:
        - name: keycloak
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          args: [
              "-b", "0.0.0.0",
              "-Dkeycloak.migration.action=import",
              "-Dkeycloak.migration.provider=singleFile",
              "-Dkeycloak.migration.file=/keycloak-realm-json/keycloak-realm.json",
              "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
          ]
          env:
            - name: KEYCLOAK_USER
              value: admin
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: admin_password

            {{- $is_https := empty .Values.ingress.tls_secret }}
            {{- $protocol := ternary "http" "https" $is_https }}
            - name: KEYCLOAK_FRONTEND_URL
              value: "{{ $protocol }}://{{ .Values.ingress.hostname }}/auth/"
            - name: PROXY_ADDRESS_FORWARDING
              value: 'true'

            - name: DB_VENDOR
              value: POSTGRES
            - name: DB_ADDR
              value: {{ .Values.database.host }}
            - name: DB_DATABASE
              value: keycloak
            - name: DB_SCHEMA
              value: public
            - name: DB_USER
              value: "keycloak{{ .Values.database.username_suffix }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: db_password
            {{ if ne .Values.database.sslmode "" }}
            - name: JDBC_PARAMS
              value: "sslmode={{ .Values.database.sslmode }}"
            {{ end }}
          volumeMounts:
            - name: keycloak-realm-json
              mountPath: /keycloak-realm-json
              readOnly: true
          # Liveness probe configuration
          livenessProbe:
            httpGet:
              path: /auth/
              port: 8080
            timeoutSeconds: 5
          # Readiness probe configuration
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
          # Startup probe configuration
          startupProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
            failureThreshold: {{ .Values.keycloak.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.keycloak.startupProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}
      initContainers:
        - name: keycloak-init
          image: "{{ .Values.keycloak.init.image.repository }}:{{ .Values.keycloak.init.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.init.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.db }}
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            - name: POSTGRES_USER
              value: "{{ .Values.database.user }}"
            - name: POSTGRES_USER_SUFFIX
              value: "{{ .Values.database.username_suffix }}"
            {{ if ne .Values.database.sslmode "" }}
            - name: POSTGRES_SSL
              value: {{ .Values.database.sslmode }}
            {{ end }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{ if .Values.database.password_secret }}
                  name: {{ .Values.database.password_secret }}
                  {{ else }}
                  name: mox-db-secret
                  {{ end }}
                  key: db_password

            # The below are intentionally without suffix
            - name: KEYCLOAK_DB_NAME
              value: "keycloak"
            - name: KEYCLOAK_DB_USER
              value: "keycloak"
            - name: KEYCLOAK_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: db_password
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
        - name: keycloak-gen
          image: "{{ .Values.keycloak.builder.image.repository }}:{{ .Values.keycloak.builder.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.builder.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: keycloak-gen-config
          env:
            - name: KEYCLOAK_REALM_JSON_PATH
              value: /keycloak-realm-json/keycloak-realm.json
            - name: KEYCLOAK_MO_CLIENT_REDIRECT_URI
              value: "[\"{{ $protocol }}://{{ .Values.ingress.hostname }}/*\"]"
            - name: KEYCLOAK_MO_CLIENT_WEB_ORIGIN
              value: "[\"{{ $protocol }}://{{ .Values.ingress.hostname }}\"]"
            - name: KEYCLOAK_DIPEX_CLIENT_ENABLED
              value: 'true'
            - name: KEYCLOAK_DIPEX_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            - name: KEYCLOAK_LORA_REALM_ENABLED
              value: "{{ .Values.keycloak.builder.lora_realm_enabled }}"
            {{- if .Values.keycloak.builder.lora_realm_enabled }}
            - name: KEYCLOAK_LORA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-lora-client-secret
                  key: client_secret
            - name: KEYCLOAK_LORA_DIPEX_CLIENT_ENABLED
              value: "{{ .Values.keycloak.builder.lora_dipex_client_enabled }}"
            {{- if .Values.keycloak.builder.lora_dipex_client_enabled }}
            - name: KEYCLOAK_LORA_DIPEX_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-lora-dipex-secret
                  key: client_secret
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
          volumeMounts:
            - name: keycloak-realm-json
              mountPath: /keycloak-realm-json
