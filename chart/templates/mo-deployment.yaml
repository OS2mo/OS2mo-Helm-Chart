# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mo-deployment
  labels:
    app: mo
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.os2mo.replicaCount }}
  selector:
    matchLabels:
      app: mo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mo
    spec:
      {{- if empty .Values.os2mo.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.os2mo.image.pullSecret }}
      {{-end }}
      containers:
        - name: mo
          {{- if ne .Values.os2mo.image.tag "latest" }}
            {{- if and (.Values.os2mo.probes.enabled) (semverCompare "<3.24.0" .Values.os2mo.image.tag) }}
              {{- fail "MO version must be at least 3.24.0 when probes are enabled" }}
            {{- end }}
          {{- end }}
          image: "{{ .Values.os2mo.image.repository }}:{{ .Values.os2mo.image.tag }}"
          imagePullPolicy: {{ .Values.os2mo.image.pullPolicy }}
          env:
            - name: PORT
              value: "5000"

            # Disable service platformen
            - name: DUMMY_MODE
              value: "true"

            - name: LORA_URL
              value: "http://mox-service:8080/"

            # Confdb
            - name: CONF_DB_USE
              value: "false"

            # gunicorn MAX_WORKERS
            - name: MAX_WORKERS
              value: "{{ .Values.os2mo.gunicorn.max_workers }}"

            # Keycloak
            - name: KEYCLOAK_SCHEMA
              value: http
            - name: KEYCLOAK_PORT
              value: "8080"
            - name: KEYCLOAK_HOST
              value: "keycloak-service"
            {{- $is_http := empty .Values.ingress.tls_secret }}
            {{- $protocol := ternary "http" "https" $is_http }}
            - name: KEYCLOAK_AUTH_SERVER_URL
              value: "{{ $protocol }}://{{ .Values.ingress.hostname }}/auth/"
          envFrom:
{{ if .Values.os2mo.external_env_config_map_name }}
          - configMapRef:
              name: "{{ .Values.os2mo.external_env_config_map_name }}"
{{ end }}
          - configMapRef:
              name: mo-config
          ports:
            - containerPort: 5000
          resources:
            {{- toYaml .Values.os2mo.resources | nindent 12 }}
          {{- if .Values.os2mo.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: 5000
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 5000
          startupProbe:
            httpGet:
              path: /health/ready
              port: 5000
            failureThreshold: {{ .Values.os2mo.probes.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.os2mo.probes.startupProbe.periodSeconds }}
          {{- end }}
      initContainers:
        - name: wait-for-mox
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for MOX to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://mox-service:8080/site-map" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
        - name: wait-for-keycloak
          image: curlimages/curl
          command: ["/bin/sh","-c"]
          args: ['echo -e "Waiting for Keycloak to be ready\c"; while [ $(curl -ksw "%{http_code}" "http://keycloak-service:8080/auth/realms/master" -o /dev/null) -ne 200 ]; do sleep 1; echo -e ".\c"; done; echo "OK"']
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
{{ if .Values.load_fixture }}
        - name: fixture-loader
          image: magentaaps/os2mo-kolding-fixture:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            {{ if ne .Values.database.sslmode "" }}
            - name: POSTGRES_SSL
              value: {{ .Values.database.sslmode }}
            {{ end }}
            - name: POSTGRES_NAME
              value: "mox"
            - name: POSTGRES_USER
              value: "mox{{ .Values.database.username_suffix }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mox-secret
                  key: db_password
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
{{ end }}
      restartPolicy: Always
