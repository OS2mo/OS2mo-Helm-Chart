# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---

ingress:
  # Must be 'nginx' for basic-auth to work
  class: ""
  # Enable HTTP basic auth with autogenerated credentials.
  # See NOTES.txt for details on credentials after deploying.
  basic_auth: false
  # TLS hostname, only required if using TLS, otherwise IP access will be fine
  hostname: null
  # Name of the TLS secret to use for ingress. If set TLS will be enabled.
  # Can be used to point to externally managed seccrets if tls_cert key and cert below
  # are not set.
  tls_secret: null
  # If key and cert are set, a TLS secret with tls_secret name will be generated.
  tls_cert:
    key: null
    cert: null

os2mo:
  replicaCount: 1

  image:
    repository: magentaaps/os2mo
    tag: azure
    pullPolicy: IfNotPresent

  port: 80

lora:
  replicaCount: 1

  image:
    repository: magentaaps/lora
    tag: azure
    pullPolicy: IfNotPresent

moxdb:
  replicaCount: 1

  image:
    repository: magentaaps/postgres-os2mo
    tag: 10-11.7-test
    pullPolicy: IfNotPresent

dipex:
  replicaCount: 1

  image:
    repository: magentaaps/dipex
    tag: feature_dipex_in_docker
    pullPolicy: Always

  settings:
    mox.base: "http://mox-service:80"
    mora.base: "http://mo-service:80"

    crontab.RUN_IMPORTS_DUMMY: true

    crontab.SVC_USER: "USER@KOMMUNE.NET"
    crontab.SVC_KEYTAB: "/tmp/keytab-file"
    crontab.CRON_BACKUP: "/tmp/backup-dir"
    crontab.CRON_LOG_FILE: "/tmp/cron-log-file"
    crontab.CRON_LOG_JSON_SINK: "/tmp/log.json"
    crontab.BACKUP_SAVE_DAYS: "60"
    crontab.SNAPSHOT_LORA: "/tmp/db-snapshot.sql"
    crontab.OS2MO_COMPOSE_YML: "/tmp/to/os2mo/docker-compose.yml"

  secrets: {}


nameOverride: ""
fullnameOverride: ""

load_fixture: false
