# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# Global
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .venv/
    - .cache/pip
    - .cache/pre-commit

stages:
  - lint
  - test
  - release

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'

include:
  - project: 'labs/salt-automation'
    ref: 'master'
    file: '/gitlab-ci-templates/common/autopub.v1.yml'

# ---------------------------------------------------------------------------
# Templates
# ---------------------------------------------------------------------------
.install-deps-template: &install-deps
  before_script:
    # Install pre-commit
    - pip install pre-commit
    # Install yamllint
    - pip install yamllint
    # Install shellcheck
    - apt-get update && apt-get install -y shellcheck
    # Install Helm
    - curl https://baltocdn.com/helm/signing.asc | apt-key add -
    - apt-get update && apt-get install -y apt-transport-https coreutils
    - |-
        echo "deb https://baltocdn.com/helm/stable/debian/ all main" |
        tee /etc/apt/sources.list.d/helm-stable-debian.list
    - apt-get update && apt-get install -y helm

.lint-template: &lint
  <<: *install-deps
  image: python:3.8
  stage: lint

.test-template: &test
  <<: *install-deps
  image: python:3.8
  stage: test

# ---------------------------------------------------------------------------
# Lint
# ---------------------------------------------------------------------------
Lint Project:
  <<: *lint
  script:
    - ./tools/set_chart_version.sh
    - pre-commit run --all-files

Lint Chart:
  stage: lint
  image: quay.io/helmpack/chart-testing:v3.4.0
  script:
    - ./tools/set_chart_version.sh
    - ct lint --all --chart-dirs .


# ---------------------------------------------------------------------------
# Test
# ---------------------------------------------------------------------------
Generate Project:
  <<: *test
  script:
    - ./tools/set_chart_version.sh
    - helm template --kube-version 1.19.11 chart/


deploy:
  stage: release
  needs: []
  image:
    name: alpine/helm:3.7.1
    entrypoint: [""]
  tags:
    - docker
  before_script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm repo add magenta-chartmuseum https://chartmuseum.magentahosted.dk/
  script:
    - ./tools/set_chart_version.sh
    - helm cm-push chart magenta-chartmuseum
  rules:
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/


pages:
  image: python:3.8
  stage: release
  needs: []
  before_script:
    - pip install mkdocs-material
    - pip install mkdocs-autorefs
  script:
    - mkdocs build --strict --site-dir public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
